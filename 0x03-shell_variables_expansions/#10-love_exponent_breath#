


11. There are 10 types of people in the world -- Those who understand binary, and those who don't

mandatory

Write a script that converts a number from base 2 to base 10.



The number in base 2 is stored in the environment variable BINARY

The script should display the number in base 10, followed by a new line

julien@production-503e7013:~/$ export BINARY=10100111001

julien@production-503e7013:~/$ ./11-binary_to_decimal

1337

julien@production-503e7013:~/$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 11-binary_to_decimal



12. Combination

mandatory

Create a script that prints all possible combinations of two letters, except oo.



Letters are lower cases, from a to z

One combination per line

The output should be alpha ordered, starting with aa

Do not print oo

Your script file should contain maximum 64 characters

julien@ubuntu:/tmp/0x03$ echo $((26 ** 2 -1))

675

julien@ubuntu:/tmp/0x03$ ./12-combinations | wc -l

675

julien@ubuntu:/tmp/0x03$

julien@ubuntu:/tmp/0x03$ ./12-combinations | tail -303 | head -10

oi

oj

ok

ol

om

on

op

oq

or

os

julien@ubuntu:/tmp/0x03$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 12-combinations



13. Floats

mandatory

Write a script that prints a number with two decimal places, followed by a new line.



The number will be stored in the environment variable NUM.



ubuntu@ip-172-31-63-244:~/0x03$ export NUM=0

ubuntu@ip-172-31-63-244:~/0x03$ ./13-print_float

0.00

ubuntu@ip-172-31-63-244:~/0x03$ export NUM=98

ubuntu@ip-172-31-63-244:~/0x03$ ./13-print_float

98.00

ubuntu@ip-172-31-63-244:~/0x03$ export NUM=3.14159265359

ubuntu@ip-172-31-63-244:~/0x03$ ./13-print_float

3.14

ubuntu@ip-172-31-63-244:~/0x03$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 13-print_float



14. Decimal to Hexadecimal

#advanced

Write a script that converts a number from base 10 to base 16.



The number in base 10 is stored in the environment variable DECIMAL

The script should display the number in base 16, followed by a new line

julien@production-503e7013:~/$ export DECIMAL=16

julien@production-503e7013:~/$ ./100-decimal_to_hexadecimal

10

julien@production-503e7013:~/$ export DECIMAL=1337

julien@production-503e7013:~/$ ./100-decimal_to_hexadecimal | cat -e

539$

julien@production-503e7013:~/$ export DECIMAL=15

julien@production-503e7013:~/$ ./100-decimal_to_hexadecimal | cat -e

f$

julien@production-503e7013:~/$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 100-decimal_to_hexadecimal

   

15. Everyone is a proponent of strong encryption

#advanced

Write a script that encodes and decodes text using the rot13 encryption. Assume ASCII.



julien@production-503e7013:~/shell/fun_with_the_shell$ cat quote

"Everyone is a proponent of strong encryption."

- Dorothy E. Denning

julien@production-503e7013:~/shell/fun_with_the_shell$ ./101-rot13 < quote

"Rirelbar vf n cebcbarag bs fgebat rapelcgvba."

- Qbebgul R. Qraavat

julien@production-503e7013:~/shell/fun_with_the_shell$



Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 101-rot13

   

16. The eggs of the brood need to be an odd number

#advanced

Write a script that prints every other line from the input, starting with the first line.



ubuntu@ip-172-31-63-244:/$ \ls -1

bin

boot

dev

etc

home

initrd.img

lib

lib32

lib64

libx32

lost+found

media

mnt

opt

proc

root

run

sbin

srv

sys

t

#t#

t~

tmp

usr

var

vmlinuz

whoareyou

ubuntu@ip-172-31-63-244:/$ \ls -1 | ./102-odd

bin

dev

home

lib

lib64

lost+found

mnt

proc

run

srv

t

t~

usr

vmlinuz

ubuntu@ip-172-31-63-244:/$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 102-odd

   

17. I'm an instant star. Just add water and stir.

#advanced

Write a shell script that adds the two numbers stored in the environment variables WATER and STIR and prints the result.



WATER is in base water

STIR is in base stir.

The result should be in base bestchol

julien@production-503e7013:~$ export WATER="ewwatratewa"

julien@production-503e7013:~$ export STIR="ti.itirtrtr"

julien@production-503e7013:~$ ./103-water_and_stir

shtbeolhc

julien@production-503e7013:~$

Repo:



GitHub repository: alx-system_engineering-devops

Directory: 0x03-shell_variables_expansions

File: 103-water_and_stir



Copyright Â© 2022 ALX, All rights reserved.0;276;0c